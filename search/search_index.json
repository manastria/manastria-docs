{"config":{"lang":["fr"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Activit\u00e9s","text":"<p>Liste des activit\u00e9s :</p> <ul> <li>Configuration d'un serveur DHCP multi-VLAN avec relais DHCP</li> </ul>"},{"location":"about/","title":"About","text":"<p>Site officiel de mkdocs : https://www.mkdocs.org/</p> <p>Site officiel de mkdocs-material : https://squidfunk.github.io/mkdocs-material/</p> <p>Site web : https://manastria.github.io/manastria-docs/</p>"},{"location":"activites/ssh_linux/ssh1/","title":"Configuration d'un serveur DHCP multi-VLAN avec relais DHCP : Une approche pratique","text":""},{"location":"activites/ssh_linux/ssh1/#introduction","title":"Introduction","text":"<p>Dans un r\u00e9seau d'entreprise moderne, la gestion manuelle des adresses IP devient rapidement complexe et source d'erreurs. Imaginez devoir configurer individuellement les param\u00e8tres r\u00e9seau de centaines d'ordinateurs ! C'est l\u00e0 qu'intervient le protocole DHCP (Dynamic Host Configuration Protocol), qui automatise cette t\u00e2che essentielle.</p> <p>Cette activit\u00e9 pratique vous guidera \u00e0 travers la mise en place d'une infrastructure DHCP dans un environnement r\u00e9seau segment\u00e9. Vous allez progressivement construire une solution compl\u00e8te, en partant d'une configuration simple pour arriver \u00e0 une architecture plus sophistiqu\u00e9e avec plusieurs VLANs.</p>"},{"location":"activites/ssh_linux/ssh1/#contexte-et-objectifs-pedagogiques","title":"Contexte et objectifs p\u00e9dagogiques","text":"<p>Imaginons une petite entreprise qui souhaite s\u00e9parer son r\u00e9seau en deux segments distincts :</p> <ul> <li>Un VLAN 10 pour les services informatiques (o\u00f9 sera notre serveur DHCP)</li> <li>Un VLAN 20 pour les postes des employ\u00e9s</li> </ul> <p>Cette s\u00e9paration pose un d\u00e9fi int\u00e9ressant : comment permettre aux ordinateurs du VLAN 20 d'obtenir automatiquement leurs configurations r\u00e9seau alors que le serveur DHCP se trouve dans un autre VLAN ? C'est l\u00e0 que la notion de relais DHCP prend tout son sens.</p>"},{"location":"activites/ssh_linux/ssh1/#phase-1-configuration-de-base-le-dhcp-dans-un-environnement-simple","title":"Phase 1 : Configuration de base - Le DHCP dans un environnement simple","text":""},{"location":"activites/ssh_linux/ssh1/#materiel-necessaire","title":"Mat\u00e9riel n\u00e9cessaire","text":"<ul> <li>1 switch Cisco 2960 (ou similaire)</li> <li>1 PC physique pour h\u00e9berger la machine virtuelle serveur Debian 12</li> <li>1 PC client (physique ou virtuel, diff\u00e9rent du PC serveur)</li> <li>C\u00e2bles r\u00e9seau droits</li> </ul>"},{"location":"activites/ssh_linux/ssh1/#synoptique-de-linfrastructure","title":"Synoptique de l'infrastructure","text":""},{"location":"activites/ssh_linux/ssh1/#mise-en-place-de-linfrastructure-initiale","title":"Mise en place de l'infrastructure initiale","text":"<ol> <li>Configuration du PC serveur<ol> <li>Installez VirtualBox ou VMware sur votre PC physique</li> <li>Cr\u00e9ez une machine virtuelle Debian 12 avec une interface r\u00e9seau en mode Bridge</li> <li>Configurez l'adresse IP statique sur la VM Debian :<ol> <li>Adresse IP : 192.168.10.10</li> <li>Masque : 255.255.255.0</li> <li>Passerelle : pour l'instant, pas n\u00e9cessaire</li> </ol> </li> </ol> </li> <li>Configuration du switch<ol> <li>Pour cette premi\u00e8re phase, aucune configuration n'est n\u00e9cessaire</li> <li>Laissez le switch dans sa configuration par d\u00e9faut (tous les ports en VLAN 1)</li> <li>Connectez :<ol> <li>Le PC physique h\u00e9bergeant la VM serveur sur le port Fa0/1</li> <li>Le PC client sur le port Fa0/2</li> </ol> </li> </ol> </li> <li>Installation et configuration du serveur DHCP<ol> <li>Utilisez votre fiche technique pour installer le package <code>isc-dhcp-server</code></li> <li>Configurez le serveur DHCP avec les param\u00e8tres suivants :<ol> <li>Plage d'adresses : <code>192.168.10.50</code> \u00e0 <code>192.168.10.100</code></li> <li>Masque de sous-r\u00e9seau : <code>255.255.255.0</code></li> <li>Passerelle : <code>192.168.10.1</code> (pour plus tard)</li> <li>Serveur DNS : <code>8.8.8.8</code></li> </ol> </li> </ol> </li> </ol>"},{"location":"activites/ssh_linux/ssh1/#tests-de-validation","title":"Tests de validation","text":"<p>Pour v\u00e9rifier que votre configuration fonctionne correctement, suivez cette proc\u00e9dure de test pas \u00e0 pas :</p> <ol> <li>Sur le serveur Debian</li> </ol> <pre><code># V\u00e9rifiez que le service DHCP est actif\nsudo systemctl status isc-dhcp-server\n\n# V\u00e9rifiez les logs DHCP pour d'\u00e9ventuelles erreurs\nsudo tail -f /var/log/syslog | grep dhcp\n</code></pre> <p>\u279c Le service doit \u00eatre \"active (running)\"</p> <p>\u279c Les logs ne doivent pas montrer d'erreurs</p> <ol> <li> <p>Sur le PC client</p> <ol> <li> <p>Windows : <pre><code>ipconfig /release\nipconfig /renew\nipconfig /all\n</code></pre></p> </li> <li> <p>Linux : <pre><code>sudo dhclient -r\nsudo dhclient\nip a\n</code></pre></p> </li> </ol> <p>\u279c Vous devez observer :</p> <ol> <li>Une adresse IP dans la plage <code>192.168.10.50-100</code><ol> <li>Le masque <code>255.255.255.0</code></li> <li>La passerelle <code>192.168.10.1</code></li> <li>Le serveur DNS <code>8.8.8.8</code></li> </ol> </li> <li>Tests de connectivit\u00e9 <pre><code># Depuis le client\nping 192.168.10.10  # Vers le serveur DHCP\n\n# Depuis le serveur\nping [IP_obtenue_par_le_client]\n</code></pre></li> </ol> <p>\u279c Les pings doivent fonctionner dans les deux sens</p> </li> <li> <p>V\u00e9rification des baux DHCP</p> </li> </ol> <pre><code># Sur le serveur\ncat /var/lib/dhcp/dhcpd.leases\n</code></pre> <p>\u279c Vous devez voir l'adresse MAC de votre client et l'IP qui lui a \u00e9t\u00e9 attribu\u00e9e</p>"},{"location":"activites/ssh_linux/ssh1/#resolution-des-problemes-courants","title":"R\u00e9solution des probl\u00e8mes courants","text":"<ul> <li>Si le service ne d\u00e9marre pas : v\u00e9rifiez les logs avec <code>journalctl -xe</code></li> <li>Si le client n'obtient pas d'adresse :<ul> <li>V\u00e9rifiez la connexion physique (LEDs du switch)</li> <li>Assurez-vous que le pare-feu du serveur autorise DHCP</li> <li>Contr\u00f4lez que l'interface r\u00e9seau est correctement d\u00e9clar\u00e9e dans <code>/etc/default/isc-dhcp-server</code></li> </ul> </li> </ul>"},{"location":"activites/ssh_linux/ssh1/#phase-2-mise-en-place-de-la-segmentation-reseau-avec-router-on-a-stick","title":"Phase 2 : Mise en place de la segmentation r\u00e9seau avec Router-on-a-stick","text":"<p>Maintenant que notre serveur DHCP fonctionne dans un r\u00e9seau simple, nous allons cr\u00e9er une infrastructure plus sophistiqu\u00e9e avec deux VLANs distincts. Cette configuration refl\u00e8te mieux la r\u00e9alit\u00e9 d'une entreprise o\u00f9 diff\u00e9rents services doivent \u00eatre s\u00e9par\u00e9s logiquement.</p>"},{"location":"activites/ssh_linux/ssh1/#materiel-supplementaire-necessaire","title":"Mat\u00e9riel suppl\u00e9mentaire n\u00e9cessaire","text":"<ul> <li>1 routeur Cisco 2901 (ou similaire)</li> <li>1 c\u00e2ble console pour la configuration du routeur</li> <li>1 c\u00e2ble r\u00e9seau suppl\u00e9mentaire pour connecter le switch au routeur</li> <li>Configurer la connexion SSH sur le routeur et le switch</li> </ul>"},{"location":"activites/ssh_linux/ssh1/#nouvelle-architecture-reseau","title":"Nouvelle architecture r\u00e9seau","text":"<p>Pour cette phase, nous allons cr\u00e9er :</p> <ul> <li>VLAN 10 (Service informatique) : r\u00e9seau <code>192.168.10.0/24</code></li> <li>VLAN 20 (Employ\u00e9s) : r\u00e9seau <code>192.168.20.0/24</code></li> </ul>"},{"location":"activites/ssh_linux/ssh1/#topologie-physique","title":"Topologie physique","text":""},{"location":"activites/ssh_linux/ssh1/#topologie-logique","title":"Topologie logique","text":""},{"location":"activites/ssh_linux/ssh1/#etapes-de-configuration","title":"\u00c9tapes de configuration","text":"<ol> <li>Pr\u00e9paration du switch<ol> <li>Connectez-vous au switch via le c\u00e2ble console</li> <li>Cr\u00e9ez les VLANs selon les param\u00e8tres suivants :<ol> <li>VLAN 10 : \u00ab\u202fINFORMATIQUE\u202f\u00bb</li> <li>VLAN 20 : \u00ab\u202fEMPLOYES\u202f\u00bb</li> </ol> </li> <li>Configurez les ports :<ol> <li>Gi0/1 : mode trunk (vers le routeur)</li> <li>Fa0/1 : VLAN 10 (serveur DHCP)</li> <li>Fa0/2 : VLAN 20 (client)</li> </ol> </li> </ol> </li> <li>Configuration du routeur<ol> <li>Connectez le routeur au port Fa0/1 du switch</li> <li>Cr\u00e9ez les sous-interfaces pour chaque VLAN :<ol> <li>G0/0.10 : <code>192.168.10.1/24</code> (passerelle VLAN 10)</li> <li>G0/0.20 : <code>192.168.20.1/24</code> (passerelle VLAN 20)</li> </ol> </li> </ol> </li> <li>Modification du serveur DHCP<ol> <li>V\u00e9rifiez l'adresse IP de la VM Debian :<ol> <li>Nouvelle IP : <code>192.168.10.10/24</code></li> <li>Passerelle : <code>192.168.10.1</code></li> </ol> </li> <li>V\u00e9rifiez la configuration DHCP pour le VLAN 10 :<ol> <li>Plage : <code>192.168.10.50</code> \u00e0 <code>192.168.10.100</code></li> <li>Passerelle : <code>192.168.10.1</code></li> <li>DNS : <code>8.8.8.8</code></li> </ol> </li> <li>Ajouter la configuration DHCP pour le VLAN 20 :<ol> <li>Plage : <code>192.168.20.50</code> \u00e0 <code>192.168.20.100</code></li> <li>Passerelle : <code>192.168.20.1</code></li> <li>DNS : <code>8.8.8.8</code></li> </ol> </li> </ol> </li> </ol>"},{"location":"activites/ssh_linux/ssh1/#tests-de-validation-etape-par-etape","title":"Tests de validation \u00e9tape par \u00e9tape","text":"<ol> <li> <p>V\u00e9rification des VLANs</p> <pre><code># Sur le switch\nshow vlan brief\n</code></pre> <p>\u279c V\u00e9rifiez que :</p> <ol> <li>Les VLANs 10 et 20 sont cr\u00e9\u00e9s<ol> <li>Fa0/1 est bien dans VLAN 10</li> <li>Fa0/2 est bien dans VLAN 20</li> </ol> </li> <li>V\u00e9rification du trunk</li> </ol> <pre><code># Sur le switch\nshow interfaces trunk\n</code></pre> <p>\u279c Le port Gi0/1 doit appara\u00eetre comme trunk</p> </li> <li> <p>Test des sous-interfaces du routeur</p> <pre><code># Sur le routeur\nshow ip interface brief\n</code></pre> <p>\u279c V\u00e9rifiez que :</p> <ol> <li>G0/0.10 est \"up/up\" avec IP 192.168.10.1</li> <li>G0/0.20 est \"up/up\" avec IP 192.168.20.1</li> </ol> </li> <li> <p>Test depuis le serveur DHCP</p> <pre><code># Sur la VM Debian\nip a                    # V\u00e9rifier la nouvelle IP\nping 192.168.10.1       # Tester la connectivit\u00e9 avec la passerelle\n</code></pre> <p>\u279c Les pings vers la passerelle doivent fonctionner</p> </li> <li> <p>Test depuis le client Pour ce test initial, configurez une IP statique sur le client :</p> <ol> <li>IP : <code>192.168.20.100</code></li> <li>Masque : <code>255.255.255.0</code></li> <li>Passerelle : <code>192.168.20.1</code></li> </ol> <p>Puis testez :</p> <pre><code>ping 192.168.20.1       # Passerelle VLAN 20\nping 192.168.10.1       # Passerelle VLAN 10\nping 192.168.10.10      # Serveur DHCP\n</code></pre> <p>\u279c Tous les pings doivent fonctionner</p> </li> </ol>"},{"location":"activites/ssh_linux/ssh1/#resolution-des-problemes-courants_1","title":"R\u00e9solution des probl\u00e8mes courants","text":"<ul> <li>Si les pings entre VLANs ne fonctionnent pas :<ul> <li>V\u00e9rifiez que <code>ip routing</code> est activ\u00e9 sur le routeur</li> <li>Contr\u00f4lez l'encapsulation dot1Q sur les sous-interfaces</li> <li>Assurez-vous que les VLANs sont bien cr\u00e9\u00e9s sur le switch</li> </ul> </li> <li>Si le serveur DHCP n'est plus accessible :<ul> <li>V\u00e9rifiez que son adresse IP a bien \u00e9t\u00e9 chang\u00e9e pour <code>192.168.10.10</code></li> <li>Contr\u00f4lez que le port du switch est dans le bon VLAN</li> <li>Testez la connectivit\u00e9 avec la passerelle</li> </ul> </li> </ul> <p>\u00c0 ce stade, nous avons :</p> <ul> <li>Deux r\u00e9seaux logiquement s\u00e9par\u00e9s</li> <li>Un routage fonctionnel entre les VLANs</li> <li>Mais le DHCP ne fonctionne que dans le VLAN 10</li> </ul> <p>La prochaine \u00e9tape sera de permettre aux clients du VLAN 20 d'obtenir automatiquement leurs param\u00e8tres r\u00e9seau via le relais DHCP.</p>"},{"location":"activites/ssh_linux/ssh1/#phase-3-mise-en-place-du-relais-dhcp","title":"Phase 3 : Mise en place du relais DHCP","text":"<p>\u00c0 ce stade, notre r\u00e9seau est segment\u00e9 en deux VLANs distincts, mais nous faisons face \u00e0 un d\u00e9fi int\u00e9ressant : comment permettre aux postes du VLAN 20 d'obtenir automatiquement leurs configurations r\u00e9seau alors que le serveur DHCP se trouve dans le VLAN 10 ?</p> <p>Pour comprendre l'importance du relais DHCP, imaginons une situation r\u00e9elle : vous avez deux bureaux s\u00e9par\u00e9s par un couloir. Le serveur DHCP est dans le bureau des informaticiens (VLAN 10), mais les employ\u00e9s dans l'autre bureau (VLAN 20) ont aussi besoin d'obtenir leurs configurations r\u00e9seau. Le relais DHCP agit comme un messager qui va transmettre les demandes d'un bureau \u00e0 l'autre.</p>"},{"location":"activites/ssh_linux/ssh1/#configuration-du-relais-dhcp","title":"Configuration du relais DHCP","text":"<ol> <li>Configuration du routeur comme relais<ol> <li>Connectez-vous au routeur via le c\u00e2ble console</li> <li>Sur l'interface du VLAN 20, configurer le relais DHCP (<code>ip helper-address</code>)</li> </ol> </li> <li> <p>Adaptation du serveur DHCP pour le VLAN 20</p> <ol> <li>Sur la VM Debian, modifiez le fichier /etc/dhcp/dhcpd.conf</li> <li>Ajoutez une nouvelle d\u00e9claration de sous-r\u00e9seau pour le VLAN 20</li> <li>Red\u00e9marrez le service DHCP :</li> </ol> <pre><code>sudo systemctl restart isc-dhcp-server\n</code></pre> </li> </ol>"},{"location":"activites/ssh_linux/ssh1/#tests-approfondis","title":"Tests approfondis","text":"<ol> <li>V\u00e9rification de la configuration du relais <pre><code># Sur le routeur\nshow running-config interface g0/0.20\n</code></pre></li> </ol> <p>\u279c V\u00e9rifiez que la commande <code>ip helper-address 192.168.10.10</code> appara\u00eet</p> <ol> <li>Observation du processus DHCP en temps r\u00e9el <pre><code># Sur le routeur\ndebug ip dhcp server packet\ndebug ip dhcp relay\n</code></pre></li> </ol> <p>Ces commandes vous permettront d'observer les \u00e9changes DHCP en direct.</p> <ol> <li> <p>Test sur le PC client</p> <ol> <li>Configurez l'interface r\u00e9seau en DHCP automatique</li> <li>Sur Windows :</li> </ol> <pre><code>ipconfig /release\nipconfig /renew\nipconfig /all\n</code></pre> </li> <li> <p>Sur Linux :     <pre><code>sudo dhclient -r\nsudo dhclient\nip a\n</code></pre></p> <p>\u279c V\u00e9rifiez que :</p> <ol> <li>L'adresse IP obtenue est dans la plage <code>192.168.20.100-200</code><ol> <li>La passerelle est <code>192.168.20.1</code></li> <li>Le serveur DNS est <code>8.8.8.8</code></li> </ol> </li> <li>Tests de connectivit\u00e9 compl\u00e8te Depuis le PC client :</li> </ol> <pre><code>ping 192.168.20.1       # Passerelle locale\nping 192.168.10.1       # Passerelle distante\nping 192.168.10.10      # Serveur DHCP\n</code></pre> </li> </ol> <p>Tous ces pings doivent fonctionner.</p> <ol> <li> <p>V\u00e9rification des baux DHCP Sur le serveur Debian :</p> <pre><code>cat /var/lib/dhcp/dhcpd.leases\n</code></pre> <p>\u279c Vous devriez voir des baux pour des adresses dans les deux plages (VLAN 10 et 20)</p> </li> </ol>"},{"location":"activites/ssh_linux/ssh1/#comprendre-ce-qui-se-passe","title":"Comprendre ce qui se passe","text":"<p>Quand un client du VLAN 20 demande une adresse IP :</p> <ol> <li>Il envoie une requ\u00eate DHCP en broadcast</li> <li>Le routeur re\u00e7oit cette requ\u00eate sur G0/0.20</li> <li>Gr\u00e2ce \u00e0 <code>ip helper-address</code>, il la transmet en unicast au serveur DHCP</li> <li>Le serveur r\u00e9pond avec les param\u00e8tres du VLAN 20</li> <li>Le routeur retransmet la r\u00e9ponse au client</li> </ol>"},{"location":"activites/ssh_linux/ssh1/#resolution-des-problemes-courants_2","title":"R\u00e9solution des probl\u00e8mes courants","text":"<p>Si le client n'obtient pas d'adresse :</p> <ol> <li> <p>V\u00e9rifiez les logs sur le serveur DHCP :     <pre><code>tail -f /var/log/syslog | grep dhcp\n</code></pre></p> </li> <li> <p>Sur le routeur, confirmez que les requ\u00eates sont relay\u00e9es :     <pre><code>show ip dhcp relay statistics\n</code></pre></p> </li> <li> <p>Points \u00e0 v\u00e9rifier :</p> <ol> <li>La d\u00e9claration du sous-r\u00e9seau 192.168.20.0 dans dhcpd.conf</li> <li>La configuration du relais sur la bonne sous-interface</li> <li>L'accessibilit\u00e9 du serveur DHCP depuis le routeur</li> </ol> </li> </ol> <p>Cette configuration compl\u00e8te permet maintenant \u00e0 tous les clients, quel que soit leur VLAN, d'obtenir automatiquement leur configuration r\u00e9seau de mani\u00e8re s\u00e9curis\u00e9e et organis\u00e9e.</p>"}]}